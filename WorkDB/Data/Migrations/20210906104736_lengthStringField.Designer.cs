// <auto-generated />
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20210906104736_lengthStringField")]
    partial class lengthStringField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Data.Models.Tables.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Ads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Машина огонь",
                            Title = "Продам авто",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Холодильник самсунг новый",
                            Title = "Продам холодильник",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Новый хороший",
                            Title = "Продам кондиционер",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Новый на гарантии или поменяю на S21 с доплатой",
                            Title = "S20",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "Зверь машина",
                            Title = "Игровой комп",
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            Description = "Новое не пригодилось",
                            Title = "Отдам свадебное платье",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Data.Models.Tables.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Авто"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Техника"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Телефоны"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Компьютеры"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Одежда"
                        });
                });

            modelBuilder.Entity("Data.Models.Tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Иванов Иван Иванович"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Петров Петр Петрович"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Сидоров Сидр Сидорович"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Александров Александр Александрович"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Николаев Николай Николаевич"
                        });
                });

            modelBuilder.Entity("Data.Models.Tables.Ad", b =>
                {
                    b.HasOne("Data.Models.Tables.Category", "Category")
                        .WithMany("Ads")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Tables.User", "User")
                        .WithMany("Ads")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Tables.Category", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("Data.Models.Tables.User", b =>
                {
                    b.Navigation("Ads");
                });
#pragma warning restore 612, 618
        }
    }
}
